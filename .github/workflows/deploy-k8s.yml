name: 'Deploy terraform k8s'
on:
  workflow_dispatch:
    inputs:
      TFAction:
        description: "Terraform Action- Apply or Destroy"     
        required: true
        default: "apply"
permissions:
  contents: read
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: dev
    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      TerraformBackendStorageAccount: "sahcastorage"
      TerraformBackendResourceGroup: "RG-TERRAFORM-HCA"
      TerraformBackendStorageContainer: "tfstate"      

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Init
        run: terraform init -backend-config=storage_account_name=$TerraformBackendStorageAccount -backend-config=container_name=$TerraformBackendStorageContainer -backend-config=key=dev.tfstate -backend-config=resource_group_name=$TerraformBackendResourceGroup -backend-config=subscription_id="$ARM_SUBSCRIPTION_ID" -backend-config=tenant_id="$ARM_TENANT_ID" -backend-config=client_id="$ARM_CLIENT_ID" -backend-config=client_secret="$ARM_CLIENT_SECRET"
      - name: Terraform Plan
        run: terraform plan -out=plan.tfplan -input=false -var="resource_group_location=eastus" -var="resource_group_name=rg-k8s-sample" 
      - name: Terraform Apply
        if: ${{ inputs.TFAction == 'apply'}}  
        run: terraform apply -input=false -auto-approve plan.tfplan
      - name: Terraform Destroy
        if: ${{ inputs.TFAction == 'destroy' }} 
        run: terraform destroy -input=false -auto-approve